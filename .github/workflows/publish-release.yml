name: publish-release
on: [workflow_call]

jobs:
  publish-release-fabric:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
      - name: Make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: Extract tag name
        shell: bash
        run: echo "##[set-output name=tag;]$(echo ${GITHUB_REF#refs/*/})"
        id: extract_tag_name_fabric
      - name: Publish
        run: ./gradlew :fabric:publish
        env:
          GPR_USERNAME: ${{secrets.GPR_USERNAME}}
          GPR_TOKEN: ${{secrets.GPR_TOKEN}}
          CURSEFORGE_TOKEN: ${{secrets.CURSEFORGE_TOKEN}}
          MODRINTH_TOKEN: ${{secrets.MODRINTH_TOKEN}}
          GPR_BUILD_VERSION: ${{steps.extract_tag_name_fabric.outputs.tag}}
  publish-release-forge:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
      - name: Make gradle wrapper executable
        run: chmod +x ./gradlew
      - name: Extract tag name
        shell: bash
        run: echo "##[set-output name=tag;]$(echo ${GITHUB_REF#refs/*/})"
        id: extract_tag_name_forge
      - name: Publish
        run: ./gradlew :forge:publish
        env:
          GPR_USERNAME: ${{secrets.GPR_USERNAME}}
          GPR_TOKEN: ${{secrets.GPR_TOKEN}}
          CURSEFORGE_TOKEN: ${{secrets.CURSEFORGE_TOKEN}}
          MODRINTH_TOKEN: ${{secrets.MODRINTH_TOKEN}}
          GPR_BUILD_VERSION: ${{steps.extract_tag_name_forge.outputs.tag}}
